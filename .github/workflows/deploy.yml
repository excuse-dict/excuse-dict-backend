name: Deploy to Server

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test --parallel

      - name: Copy JAR to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "build/libs/excuse_dict-0.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/app/"
          strip_components: 2

      - name: Deploy on server
        uses: appleboy/ssh-action@master
        env:
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          GMAIL_USERNAME: ${{ secrets.GMAIL_USERNAME }}
          GMAIL_PASSWORD: ${{ secrets.GMAIL_PASSWORD }}
          JWT_KEY: ${{ secrets.JWT_KEY }}
          RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
          ADMIN_EMAILS: ${{ secrets.ADMIN_EMAILS }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: MYSQL_PASSWORD,GMAIL_USERNAME,GMAIL_PASSWORD,JWT_KEY,RECAPTCHA_SECRET_KEY,ADMIN_EMAILS,GEMINI_API_KEY
          script: |
            cd /home/ubuntu/app
            
            cat > Dockerfile << 'EOF'
            FROM openjdk:17
            WORKDIR /app
            COPY excuse_dict-0.0.1-SNAPSHOT.jar app.jar
            EXPOSE 8081
            ENV JAVA_OPTS="-Xms256m -Xmx512m -XX:MaxMetaspaceSize=128m -XX:+UseG1GC"
            ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar --spring.profiles.active=prod"]
            EOF
            
            docker stop excuse-dict || true
            docker rm excuse-dict || true
            docker build -t excuse-dict:latest .
            
            docker run -d --name excuse-dict \
              --network host \
              --restart unless-stopped \
              -e MYSQL_PASSWORD="${MYSQL_PASSWORD}" \
              -e GMAIL_USERNAME="${GMAIL_USERNAME}" \
              -e GMAIL_PASSWORD="${GMAIL_PASSWORD}" \
              -e JWT_KEY="${JWT_KEY}" \
              -e RECAPTCHA_SECRET_KEY="${RECAPTCHA_SECRET_KEY}" \
              -e ADMIN_EMAILS="${ADMIN_EMAILS}" \
              -e GEMINI_API_KEY="${GEMINI_API_KEY}" \
              excuse-dict:latest
            
            sleep 10
            docker ps | grep excuse-dict